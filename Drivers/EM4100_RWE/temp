	uint32_t blockData;

	/* Конфигурационный блок  (Block 0)*/
	// Safer key
	blockData = 0;
	blockData |= CD_SAFER_KEY;
	// Data bit-rate
	blockData |= CD_BIT_RATE_RF64;
	// Modulation
	blockData |=CD_MODULATION_MANCHESTER;
	// PWD (password off)
	//blockData |=CD_PWD_BIT;
	// Max block (1)
	blockData |=CD_MAX_BLOCK_2;

	StandartWrite(OPC_WRITE_PAGE_0, 0, blockData, 0);

	/* Первая часть фрейма  (Block 1)*/
	blockData = 0;
	// заголовок
	blockData |= 0b111111111 << 23;
	// D0 - D3
	blockData |= ((tagData[0] >> 0) & 1U) << 22;
	blockData |= ((tagData[0] >> 1) & 1U) << 21;
	blockData |= ((tagData[0] >> 2) & 1U) << 20;
	blockData |= ((tagData[0] >> 3) & 1U) << 19;
	// P0
	blockData |= CalcParity4(tagData[0] >> 0) << 18;
	// D4 - D7
	blockData |= ((tagData[0] >> 4) & 1U) << 17;
	blockData |= ((tagData[0] >> 5) & 1U) << 16;
	blockData |= ((tagData[0] >> 6) & 1U) << 15;
	blockData |= ((tagData[0] >> 7) & 1U) << 14;
	// P1
	blockData |= CalcParity4(tagData[0] >> 4) << 13;
	// D8 - D11
	blockData |= ((tagData[1] >> 0) & 1U) << 12;
	blockData |= ((tagData[1] >> 1) & 1U) << 11;
	blockData |= ((tagData[1] >> 2) & 1U) << 10;
	blockData |= ((tagData[1] >> 3) & 1U) << 9;
	// P2
	blockData |= CalcParity4(tagData[1] >> 0) << 8;
	// D12 - D15
	blockData |= ((tagData[1] >> 4) & 1U) << 7;
	blockData |= ((tagData[1] >> 5) & 1U) << 6;
	blockData |= ((tagData[1] >> 6) & 1U) << 5;
	blockData |= ((tagData[1] >> 7) & 1U) << 4;
	// P3
	blockData |= CalcParity4(tagData[1] >> 4) << 3;
	// D16 - D18
	blockData |= ((tagData[2] >> 0) & 1U) << 2;
	blockData |= ((tagData[2] >> 1) & 1U) << 1;
	blockData |= ((tagData[2] >> 2) & 1U) << 0;

	StandartWrite(OPC_WRITE_PAGE_0, 0, blockData, 1);

	/* Вторая часть фрейма (Block 2)*/
	blockData = 0;
	// D19
	blockData |= ((tagData[2] >> 3) & 1U) << 31;
	// P4
	blockData |= CalcParity4(tagData[2] >> 0) << 30;
	// D20 - D23
	blockData |= ((tagData[2] >> 4) & 1U) << 29;
	blockData |= ((tagData[2] >> 5) & 1U) << 28;
	blockData |= ((tagData[2] >> 6) & 1U) << 27;
	blockData |= ((tagData[2] >> 7) & 1U) << 26;
	// P5
	blockData |= CalcParity4(tagData[2] >> 4) << 25;
	// D24 - D27
	blockData |= ((tagData[3] >> 0) & 1U) << 24;
	blockData |= ((tagData[3] >> 1) & 1U) << 23;
	blockData |= ((tagData[3] >> 2) & 1U) << 22;
	blockData |= ((tagData[3] >> 3) & 1U) << 21;
	// P6
	blockData |= CalcParity4(tagData[3] >> 0) << 20;
	// D28 - D31
	blockData |= ((tagData[3] >> 4) & 1U) << 19;
	blockData |= ((tagData[3] >> 5) & 1U) << 18;
	blockData |= ((tagData[3] >> 6) & 1U) << 17;
	blockData |= ((tagData[3] >> 7) & 1U) << 16;
	// P7
	blockData |= CalcParity4(tagData[3] >> 4) << 15;
	// D32 - D35
	blockData |= ((tagData[4] >> 0) & 1U) << 14;
	blockData |= ((tagData[4] >> 1) & 1U) << 13;
	blockData |= ((tagData[4] >> 2) & 1U) << 12;
	blockData |= ((tagData[4] >> 3) & 1U) << 11;
	// P8
	blockData |= CalcParity4(tagData[4] >> 0) << 10;
	// D36 - D39
	blockData |= ((tagData[4] >> 4) & 1U) << 9;
	blockData |= ((tagData[4] >> 5) & 1U) << 8;
	blockData |= ((tagData[4] >> 6) & 1U) << 7;
	blockData |= ((tagData[4] >> 7) & 1U) << 6;
	// P9
	blockData |= CalcParity4(tagData[4] >> 4) << 5;
	// PC0 - PC4
	uint8_t pc = 0;
	pc = (tagData[0] >> 4) ^ (tagData[0] >> 0) ^ (tagData[1] >> 4) ^ (tagData[1] >> 0) ^
			 (tagData[2] >> 4) ^ (tagData[2] >> 0) ^ (tagData[3] >> 4) ^ (tagData[3] >> 0) ^
			 (tagData[4] >> 4) ^ (tagData[4] >> 0);
	blockData |= ((pc >> 0) & 1U) << 4;
	blockData |= ((pc >> 1) & 1U) << 3;
	blockData |= ((pc >> 2) & 1U) << 2;
	blockData |= ((pc >> 3) & 1U) << 1;
	// Stop Bit
	blockData |= 0 << 0;

	StandartWrite(OPC_WRITE_PAGE_0, 0, blockData, 2);